# This is a basic workflow to help you get started with Actions

name: CI

concurrency:
  group: CI
  cancel-in-progress: true

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      CC: gcc-12
      CXX: g++-12

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install meson g++-12 ninja-build libhowardhinnant-date-dev

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2

      - name: Cache subprojects
        id: meson-cache

        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: meson-build-cache
          enableCrossOsArchive: true

      - name: List cache
        run: ls subprojects/packagecache
        continue-on-error: true

      # Runs a set of commands using the runners shell
      - name: Configure
        run: meson setup  --warnlevel 3 --buildtype release --default-library static --force-fallback-for libjpeg build-linux

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-linux

      - name: ldd
        run: ldd build-linux/src/dregarnuhr
        continue-on-error: true

      # Tests
      - name: Test
        run: ninja -C build-linux test

      - name: Save logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: linux-meson-log
          path: |
            build-linux/meson-logs/meson-log.txt
            build-linux/meson-logs/testlog.txt
          if-no-files-found: ignore
          retention-days: 5

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-linux
          path: build-linux/src/dregarnuhr

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-12
    env:
      CC: gcc-12
      CXX: g++-12
      DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          brew search gcc@
          brew install meson gcc@12 ninja

      - name: Check gcc
        continue-on-error: true
        run: |
          which gcc
          ls -l `which gcc`
          which g++
          ls -l `which g++`
          which $CC
          ls -l `which $CC`
          which $CXX
          ls -l `which $CXX`

      - name: Cache subprojects
        id: meson-cache
        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: List cache
        run: ls subprojects/packagecache
        continue-on-error: true

      # Runs a set of commands using the runners shell
      - name: Configure
        run: |
          meson setup --warnlevel 3 --buildtype release --default-library static -Dcpp_link_args="-static-libstdc++ -static-libgcc" --force-fallback-for libjpeg build-mac

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-mac

      - name: ldd
        run: otool -L build-mac/src/dregarnuhr
        continue-on-error: true

      # Tests
      - name: Test
        run: ninja -C build-mac test

      - name: Save logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: mac-meson-log
          path: |
            build-mac/meson-logs/meson-log.txt
            build-mac/meson-logs/testlog.txt
          if-no-files-found: ignore
          retention-days: 5

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-macos
          path: build-mac/src/dregarnuhr

  build-win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install meson ninja

      - name: Prepare MSVC
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64

      - name: Cache subprojects
        id: meson-cache
        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: List cache
        run: dir subprojects/packagecache
        continue-on-error: true

      # Runs a set of commands using the runners shell
      - name: Configure
        run: |
          meson setup  --warnlevel 3 --buildtype release -Dc_std=c17 -Dcpp_std=c++20 --default-library static -Dcpp_eh=a -Dlibxml2:warning_level=0 -Dminiz:warning_level=0 -Dlibjpeg-turbo:warning_level=0 -Dcpp-httplib:cpp-httplib_openssl=disabled --force-fallback-for zlib,liblzma,libxml2 build-win

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-win

      - name: ldd
        run: dumpbin /DEPENDENTS build-win/src/dregarnuhr.exe
        continue-on-error: true

      # Tests
      - name: Test
        run: ninja -C build-win test

      - name: Save logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: win-meson-log
          path: |
            build-win/meson-logs/meson-log.txt
            build-win/meson-logs/testlog.txt
          if-no-files-found: ignore
          retention-days: 5

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-win
          path: build-win/src/dregarnuhr.exe

  check-run-linux:
    needs: build-linux
    runs-on: ubuntu-22.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - run: |
          chmod u+x dregarnuhr-linux/dregarnuhr
          dregarnuhr-linux/dregarnuhr --check --verbose

  check-run-macos-11:
    needs: build-mac
    runs-on: macos-11
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - run: |
          chmod u+x dregarnuhr-macos/dregarnuhr
          dregarnuhr-macos/dregarnuhr --check --verbose

  check-run-macos-12:
    needs: build-mac
    runs-on: macos-12
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - run: |
          chmod u+x dregarnuhr-macos/dregarnuhr
          dregarnuhr-macos/dregarnuhr --check --verbose

  check-run-win:
    needs: build-win
    runs-on: windows-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - run: dregarnuhr-win/dregarnuhr.exe --check --verbose
