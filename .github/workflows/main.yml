# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install meson g++-12 ninja-build

      - name: Cache subprojects
        id: meson-cache
        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Runs a set of commands using the runners shell
      - name: Configure
        run: meson --buildtype release --default-library static  build-linux

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-linux

      # Tests
      - name: Test
        run: ninja -C build-linux test

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-linux
          path: build-linux/src/dregarnuhr

  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          brew update
          brew install meson libxml++@5 gcc@12 ninja

      - name: Cache subprojects
        id: meson-cache
        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Runs a set of commands using the runners shell
      - name: Configure
        run: meson --buildtype release --default-library static  build-mac

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-mac

      # Tests
      - name: Test
        run: ninja -C build-mac test

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-macos
          path: build-mac/src/dregarnuhr

  build-win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          choco install meson ninja

      - name: Prepare MSVC
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64

      - name: Cache subprojects
        id: meson-cache
        uses: actions/cache@v3
        with:
          path: subprojects/packagecache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Runs a set of commands using the runners shell
      - name: Configure
        run: meson --buildtype release --default-library static  build-win

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C build-win

      # Tests
      - name: Test
        run: ninja -C build-win test

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-macos
          path: build-win/src/dregarnuhr.exe
